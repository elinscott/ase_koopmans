environment:
  matrix:
    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    #  # Python 2.7
    #- PYTHON: "C:\\Python27"
    #  # Python 2.7 - 64-bit
    #- PYTHON: "C:\\Python27-x64"
    #  # Python 3.6
    #- PYTHON: "C:\\Python36"
    # Python 3.6 - 64-bit
    - PYTHON: "C:\\Python36-x64"
    #  # Conda 2.7
    #- PYTHON: "C:\\Miniconda"
    #  # Conda 2.7 64-bit
    #- PYTHON: "C:\\Miniconda-x64"
    #  # Conda 3.6
    #- PYTHON: "C:\\Miniconda36"
    #  # Conda 3.6 64-bit
    #- PYTHON: "C:\\Miniconda36-x64"

install:
  # Prepend chosen Python to the PATH of this build
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  # Install the conda supplied packages if using conda, otherwise use pip
  # The wheel package is needed for 'pip wheel'
  # Turn off progressbars '-q' otherwise PowerShell thinks there are errors
  - "echo %PYTHON%"
  - ps: |
      if($env:PYTHON -match "conda")
      {
        echo "install with conda"
        conda update -yq conda
        conda install -yq pip wheel numpy scipy pyflakes matplotlib flask pytest
      }
      else
      {
        echo "install with pip"
        #pip install --upgrade pip
        python.exe -m pip install --upgrade pip
        pip install wheel pytest
      }
  # install ase into the current python
  - "echo %cd%"
  - "where pip"
  - "pip install ."

build: off

test_script:
  # run tests from temp dir so source tree doesn't interfere
  - "cd %TEMP%"
  - "ase info"
  - "ase -T test"

after_test:
  # This step builds distribution.
  - "cd %APPVEYOR_BUILD_FOLDER%"
  # use pip as distutils doesn't implemet bdist_wheel
  - "pip wheel -w dist --no-deps ."

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
